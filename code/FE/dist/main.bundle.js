(()=>{"use strict";var e={923:(e,n,o)=>{var t,r=(t=o(828))&&t.__esModule?t:{default:t},c=new r.default((function(e,n){e("sync OK")}));console.log("p1",c);var l=c.then((function(e){console.log("p1_res1",e)})),u=c.then((function(){return"p1 then resolve ok"})),s=c.then((function(){throw"p1 then throw error"})),f=c.then((function(){return new r.default((function(e){return e("p1 then promise resolve")}))})),i=c.then((function(){return new r.default((function(e,n){return n("p1 then promise reject")}))}));console.log("p1_then_res1",l),console.log("p1_then_res2",u),console.log("p1_then_res3",s),console.log("p1_then_res4",f),console.log("p1_then_res5",i);var a=new r.default((function(e,n){n("sync ERROR")}));console.log("p2",a);var h=a.catch((function(e){console.log("p2_err",e)}));console.log("p2_catch_err",h);var p=a.catch((function(e){console.log("p2_res1",e)})),_=a.catch((function(){return"p2 then resolve ok"})),g=a.catch((function(){throw"p2 then throw error"})),v=a.catch((function(){return new r.default((function(e){return e("p2 then promise resolve")}))})),d=a.catch((function(){return new r.default((function(e,n){return n("p2 then promise reject")}))}));console.log("p2_then_res1",p),console.log("p2_then_res2",_),console.log("p2_then_res3",g),console.log("p2_then_res4",v),console.log("p2_then_res5",d);var w=new r.default((function(){throw"sync throw error"}));console.log("p3",w);var m=w.catch((function(e){console.log("p3_err",e)}));console.log("p3_catch_err",m);var y=w.catch((function(e){console.log("p3_res1",e)})),k=w.catch((function(){return"p3 then resolve ok"})),j=w.catch((function(){throw"p3 then throw error"})),R=w.catch((function(){return new r.default((function(e){return e("p3 then promise resolve")}))})),P=w.catch((function(){return new r.default((function(e,n){return n("p3 then promise reject")}))}));console.log("p3_then_res1",y),console.log("p3_then_res2",k),console.log("p3_then_res3",j),console.log("p3_then_res4",R),console.log("p3_then_res5",P);var b=new r.default((function(e){setTimeout((function(){e("async OK")}),500)}));console.log("p4",b);var T=b.then((function(e){console.log("p4_res",e)}));console.log("p4_then_res",T);var E=b.then((function(e){console.log("p4_res1",e)})),O=b.then((function(){return"p4 then resolve ok"})),S=b.then((function(){throw"p4 then throw error"})),x=b.then((function(){return new r.default((function(e){return e("p4 then promise resolve")}))})),B=b.then((function(){return new r.default((function(e,n){return n("p4 then promise reject")}))}));console.log("p4_then_res1",E),console.log("p4_then_res2",O),console.log("p4_then_res3",S),console.log("p4_then_res4",x),console.log("p4_then_res5",B);var K=new r.default((function(e,n){setTimeout((function(){n("async ERROR")}),500)}));console.log("p5",K);var M=K.catch((function(e){console.log("p5_err",e)}));console.log("p5_catch_err",M);var A=K.catch((function(e){console.log("p5_res1",e)})),C=K.catch((function(){return"p5 then resolve ok"})),q=K.catch((function(){throw"p5 then throw error"})),z=K.catch((function(){return new r.default((function(e){return e("p5 then promise resolve")}))})),D=K.catch((function(){return new r.default((function(e,n){return n("p5 then promise reject")}))}));console.log("p5_then_res1",A),console.log("p5_then_res2",C),console.log("p5_then_res3",q),console.log("p5_then_res4",z),console.log("p5_then_res5",D);var F=new r.default((function(){setTimeout((function(){throw"throw error"}),500)}));console.log("p6",F),new r.default((function(e,n){throw"异常穿透Error"})).then((function(){return"step1"})).then((function(){return"step2"})).then((function(){return"step3"})).catch((function(e){console.log("p7",e)}));var G=new r.default((function(e,n){e(1)}));G.then((function(e){return console.log("p8 ",e),++e})).then((function(e){return console.log("p8 ",e),++e})).then((function(e){return console.log("p8 ",e),++e})).catch((function(e){console.log("p8",e)}));var H=r.default.resolve("p9_1"),I=r.default.resolve(new r.default((function(e){e("p9_2")}))),J=r.default.resolve(new r.default((function(e,n){n("p9_3")})));console.log("p9_1",H),console.log("p9_2",I),console.log("p9_3",J);var L=r.default.reject("p10_1"),N=r.default.reject(new r.default((function(e){e("p10_2")}))),Q=r.default.reject(new r.default((function(e,n){n("p10_3")})));console.log("p10_1",L),console.log("p10_2",N),console.log("p10_3",Q);var U=r.default.all([c,b,G]),V=r.default.all([c,a,b]);console.log("p11_1",U),V.catch((function(e){return console.log("p11_2",V)}));var W=r.default.race([c,a]),X=r.default.race([a,c]);console.log("p12_1",W),X.catch((function(e){return console.log("p12_2",V)}))},828:(e,n)=>{function o(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var t=function(){function e(n){var o=this;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.PromiseState="pending",this.PromiseResult=null,this.callBacks=[];var t=function(e){"pending"===o.PromiseState&&(o.PromiseState="rejected",o.PromiseResult=e,setTimeout((function(){o.callBacks.forEach((function(e){return e.onReject()}))}),0))};try{n((function(e){"pending"===o.PromiseState&&(o.PromiseState="fulfilled",o.PromiseResult=e,setTimeout((function(){o.callBacks.forEach((function(e){return e.onResolve()}))}),0))}),t)}catch(e){t(e)}}var n,t,r;return n=e,r=[{key:"resolve",value:function(n){return new e((function(o,t){n instanceof e?n.then(o,t):o(n)}))}},{key:"reject",value:function(n){return new e((function(e,o){o(n)}))}},{key:"all",value:function(n){return new e((function(o,t){for(var r=0,c=new Array(n.length),l=function(l){e.resolve(n[l]).then((function(e){r++,c[l]=e,r===n.length&&o(c)}),(function(e){t(e)}))},u=0;u<n.length;u++)l(u)}))}},{key:"race",value:function(n){return new e((function(o,t){for(var r=0;r<n.length;r++)e.resolve(n[r]).then((function(e){o(e)}),(function(e){t(e)}))}))}}],(t=[{key:"then",value:function(n,o){var t=this;return n="function"==typeof n?n:function(e){return e},o="function"==typeof o?o:function(e){throw e},new e((function(r,c){var l=function(n){try{var o=n(t.PromiseResult);o instanceof e?o.then(r,c):r(o)}catch(e){c(e)}};switch(t.PromiseState){case"fulfilled":setTimeout((function(){l(n)}));break;case"rejected":setTimeout((function(){l(o)}));break;default:t.callBacks.push({onResolve:function(){return l(n)},onReject:function(){return l(o)}})}}))}},{key:"catch",value:function(e){return this.then(null,e)}}])&&o(n.prototype,t),r&&o(n,r),e}();n.default=t}},n={};!function o(t){var r=n[t];if(void 0!==r)return r.exports;var c=n[t]={exports:{}};return e[t](c,c.exports,o),c.exports}(923)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,